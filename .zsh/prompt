# Based on:

# Purification
# by Matthieu Cneude
# https://github.com/Phantas0s/purification

# Based on:

# Purity
# by Kevin Lanni
# https://github.com/therealklanni/purity
# MIT License

# prompt:
# %F => color dict
# %f => reset color
# %~ => current path
# %* => time
# %n => username
# %m => shortname host
# %(?..) => prompt conditional - %(condition.true.false)
git_prompt_status() {
   local INDEX STATUS
   local is_ahead=0
   local is_behind=0
   local space=""

   INDEX=$(command git status --porcelain -b 2> /dev/null)

   STATUS=""

   if $(echo "$INDEX" | command grep -E '^\?\? ' &> /dev/null); then
      STATUS="$ZSH_THEME_GIT_PROMPT_UNTRACKED$STATUS"
      space=" "
   fi

   if $(echo "$INDEX" | grep '^A  ' &> /dev/null); then
      STATUS="$ZSH_THEME_GIT_PROMPT_ADDED$space$STATUS"
      space=" "
   elif $(echo "$INDEX" | grep '^M  ' &> /dev/null); then
      STATUS="$ZSH_THEME_GIT_PROMPT_ADDED$space$STATUS"
      space=" "
   elif $(echo "$INDEX" | grep '^MM ' &> /dev/null); then
      STATUS="$ZSH_THEME_GIT_PROMPT_ADDED$space$STATUS"
      space=" "
   fi

   if $(echo "$INDEX" | grep '^ M ' &> /dev/null); then
      STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$space$STATUS"
      space=" "
   elif $(echo "$INDEX" | grep '^AM ' &> /dev/null); then
      STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$space$STATUS"
      space=" "
   elif $(echo "$INDEX" | grep '^MM ' &> /dev/null); then
      STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$space$STATUS"
      space=" "
   elif $(echo "$INDEX" | grep '^ T ' &> /dev/null); then
      STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$space$STATUS"
      space=" "
   fi

   if $(echo "$INDEX" | grep '^R  ' &> /dev/null); then
      STATUS="$ZSH_THEME_GIT_PROMPT_RENAMED$space$STATUS"
      space=" "
   fi

   if $(echo "$INDEX" | grep '^ D ' &> /dev/null); then
      STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$space$STATUS"
      space=" "
   elif $(echo "$INDEX" | grep '^D  ' &> /dev/null); then
      STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$space$STATUS"
      space=" "
   elif $(echo "$INDEX" | grep '^AD ' &> /dev/null); then
      STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$space$STATUS"
      space=" "
   fi

   if $(command git rev-parse --verify refs/stash >/dev/null 2>&1); then
      STATUS="$ZSH_THEME_GIT_PROMPT_STASHED$space$STATUS"
      space=" "
   fi

   if $(echo "$INDEX" | grep '^UU ' &> /dev/null); then
      STATUS="$ZSH_THEME_GIT_PROMPT_UNMERGED$space$STATUS"
      space=" "
   fi

   if $(echo "$INDEX" | grep '^## [^ ]\+ .*ahead' &> /dev/null); then
      is_ahead=1
   fi

   if $(echo "$INDEX" | grep '^## [^ ]\+ .*behind' &> /dev/null); then
      is_behind=1
   fi

   if [[ $is_behind -eq 1 && $is_ahead -eq 1 ]]; then
      STATUS="$ZSH_THEME_GIT_PROMPT_BEHIND_AHEAD$space$STATUS"
      space=" "
   elif [[ $is_ahead -eq 1 ]]; then
      STATUS="$ZSH_THEME_GIT_PROMPT_AHEAD$space$STATUS"
      space=" "
   elif [[ $is_behind -eq 1 ]]; then
      STATUS="$ZSH_THEME_GIT_PROMPT_BEHIND$space$STATUS"
      space=" "
   fi

   if $(echo "$INDEX" | grep '^## [^ ]\+ .*diverged' &> /dev/null); then
      STATUS="$ZSH_THEME_GIT_PROMPT_DIVERGED$space$STATUS"
      space=" "
   fi

   if [[ ! -z "$STATUS" ]]; then
      echo "[$STATUS]"
   fi
}

prompt_git_branch() {
   autoload -Uz vcs_info 
   precmd_vcs_info() { vcs_info }
   precmd_functions+=( precmd_vcs_info )
   setopt prompt_subst
   zstyle ':vcs_info:git:*' formats '%b'
}

prompt_git_info() {
   [ ! -z "$vcs_info_msg_0_" ] && echo "$ZSH_THEME_GIT_PROMPT_PREFIX%F{yellow}$vcs_info_msg_0_%f$ZSH_THEME_GIT_PROMPT_SUFFIX"
}

prompt_precmd() {
   # Pass a line before each prompt
   # print -P ''
}

prompt_setup() {
   uid=$(id | cut -d= -f2 | cut -d\( -f1)

   if [ $uid -eq 0 ]; then
      pscolor=red
   else
      pscolor=green
   fi

   autoload -Uz add-zsh-hook
   add-zsh-hook precmd prompt_precmd

   ZSH_THEME_GIT_PROMPT_PREFIX=" %F{red}λ%f:"
   ZSH_THEME_GIT_PROMPT_DIRTY="dirty"
   ZSH_THEME_GIT_PROMPT_CLEAN="clean"

   ZSH_THEME_GIT_PROMPT_ADDED="%F{green}%f"
   ZSH_THEME_GIT_PROMPT_MODIFIED="%F{blue}%f"
   ZSH_THEME_GIT_PROMPT_DELETED="%F{red}%f"
   ZSH_THEME_GIT_PROMPT_RENAMED="%F{magenta}%f"
   ZSH_THEME_GIT_PROMPT_UNMERGED="%F{yellow}%f"
   ZSH_THEME_GIT_PROMPT_UNTRACKED="%F{white}%f"
   ZSH_THEME_GIT_PROMPT_STASHED="%B%F{gray}%f%b"
   ZSH_THEME_GIT_PROMPT_BEHIND="%B%F{red}%f%b"
   ZSH_THEME_GIT_PROMPT_AHEAD="%B%F{green}%f%b"
   ZSH_THEME_GIT_PROMPT_BEHIND_AHEAD="%B%F{#964B00}ﬡ%f%b"

   prompt_git_branch
   RPROMPT='$(prompt_git_info) $(git_prompt_status)'
   PROMPT='%(?:%{$fg_bold[green]%}➜ :%{$fg_bold[red]%}➜ )%{%B%F{$pscolor}%}%n@%m:%.>%{%b%f%}%  '
}

prompt_setup
